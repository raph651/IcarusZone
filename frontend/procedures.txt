## 1: npm start takes long time to compile and run

Each 'npm start' command run takes about 2mins, and there is warning:

---
(node:22848) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:22848) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
---

# still no obvious solution. Might be WSL2 running on windows path, slowing down the performance.


## 2: npm server doesn't reload after saving changes

Changing content in the App.js doesn't immediately make the server reload the page

#solution :

@package.json:

from 
  "scripts": {
    "start": "react-scripts start",

to
  "scripts": {
    "start": "WATCHPACK_POLLING=true react-scripts start",

## 3. concatenate className with variable doesn't work

Example: className = "text"+ item.color, "navitem".
        where item.color = "purple-200"

# solution: className = {classNames("text"+item.color, "navitem")}

or className = item.color, "navitem".
        where item.color = "text-purple-200"

Sometimes, the "hover:" + (item.color ? item.color : ' ') " statement doesn't work.
Specifically, the last item would not add the hover effect. When I change to "hover:text-a_color-xxx"
it works again. This issue is kind of related to react's state of components.

## 4. Navigation active page link doesn't work with aria-current='page'

Problem: wanted to create an flex box under the active navigation item, 
for example, navbar:    main Page, employees, Team, Projects 
                                  [-------]
active nav is emplyees.

However, in order to use aria-current, need to use useState() variable and function to update/set aria-current.

Solution: use <NavLink>, such that using the 'className = { ({isActive}) => {}}' to create dynamic page update function.
```
                        className={({ isActive }) => {
                          const active = isActive;

                          return classNames(
                            active ? "class1" : "class2",
                            "classContinue..."
                          );
                        }}
```


## 5. ---:after{}--- styling. 

define new element showing up besides the original element
For example, 
nav{
    display: flex space-x-4;
    align-items: center;
    justify-content: center;
    margin: auto;
}

.navitem:after {
    content: "";
    position: absolute;
    background-color: #7dd3fc;
    height: 3px;
    width: 0;
    left:10px;
    bottom: 0px;
    transition: 0.3s;
}

'.navitem:after' will create a new flex box, with specification of '.navitem' and '.navitem:after' class

## 6. 'POST' error message=>: 'http://localhost:8000/api/customer/24/ 500 (Internal Server Error)'
and 'SyntaxError: Unexpected token '<', "<!DOCTYPE "... is not valid JSON'

Problem : tried to editCustomer and then fetch to backend using 'POST' method. The 'Content-Type' in headers 
is already set to be 'application/json', still not working.

Reason: the 500 error comes from views.customer doesn't have the permission for 'POST'

Solution: add 'POST' method to views.customer function

## 6. App.js can't resolve the function from components.

--> Problem: 
  Defined a function start with lowercase letter (like newPage) in scr/pages/newPage.js

  Specifically, newPage.js looks like
```
    export default function newPage(){
      return ....;
    }
```
  In App.js,
```
    import newPage from "./pages/newPage";

    ...

    <Route path=... element = {<newPage/>} />

    ...

```

However, the newPage function can't be resolved and it was not used in App.js.

--> Reason: All React component names must start with a capital letter. If you start a component name with 
a lowercase letter, it will be treated as a built-in element like a <div> or a <span>. This is because of the way JSX works.

--> Solve: replace the function name starting with upppercase letter ( newPage -> NewPage )

## 7. Add react component into Django site 
See https://reactjs.org/docs/add-react-to-a-website.html#quickly-try-jsx

https://medium.com/uva-mobile-devhub/set-up-react-in-your-django-project-with-webpack-4fe1f8455396


## 8. AWS S3 webhosting. Create a bucket called the same name as your CNAME (eg. site.icaruszone.com).
After `npm run build`, upload the build files to the bucket. In the property, enable static website hosting. Now,
this bucket-name.aws.s3.xxxxx.com can be accessible!

## 9. Create an AWS CloudFront for the website. The browser might tell the user this website is insecure. 
Create an AWS CloudFront, link the S3 bucket endpoint and add an additional CNAME(same name for the bucket name).
Request a public SSL certificate, so this website will look secure. Also, configure the cloudfront to redirect http to https.
Then both http://site.icaruszone.com or https://site.icaruszone.com could work.

Now, this xxxxxx.cloudfront.net can be accessible!

Go to the DNS provider and add the corresponding CNAME (site -> this cloudfront address), add the SSL certificate CNAME.

PS: The CloudFront will cache S3 bucket response for default 48 hrs. So even you change files in S3 bucket, the update will not be reflected.
You have to invalidate the file path's in CloudFront, or you can point object versioning to the changed files.

Alright, the website should show no insecure message now.